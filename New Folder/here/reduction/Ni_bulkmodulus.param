##############################################################
### Computation of Ni bulk modulus ###########################
##############################################################

#------------------- Initialization --------------
##Select your units
## electron : [m] = amu,   [x] = Bohr, [E]=H,  [q]=e, [T]=K, [t]=fs
##    metal : [m] = g/mol, [x] = A,    [E]=eV, [q]=e, [T]=K, [t]=ps, [P]=bars=1e5Pa
##       si : [m] = kg,    [x] = m,    [E]=J,  [q]=C, [T]=K, [t]=s
units 	metal
dimension 3
boundary p p p

## Choose your atom_style
atom_style atomic


#-------------------- Atom definition -----------------
## Read box dimensions and atomic positions from file
## Or create it using lammps scripting itself
read_data   nikel-small.lmp
#
#changed
#lattice fcc 3.55
#region whole block 0 5 0 5 0 5 units lattice
#create_box	1	whole
#create_atoms	1	region	whole


## Atoms/ions properties
group	Ni type 1


#-------------------- Settings --------------------------
#--------- Interatomic potential parameters -------------
pair_style	eam/fs #alloy
pair_coeff	* * Nickel_pot.txt Ni   


#----------------- Compute ----------------------
compute eng all pe/atom                          #c_eng : Epot/atom for each atom 
compute eatomsav all reduce ave c_eng            #c_eatomsav : <Epot/atom>

#----------------- Thermo output ---------------------
thermo          10
thermo_style    custom step cpu pe ke fnorm temp lx ly lz press c_eatomsav 

variable          Pressure  equal 0.1*press #change the unit from bar to MPa

print             "# Vol_peratom (A^3)    E_peratom (eV)    Latt_param (A)    Fnorm (eV/A)    Pressure (MPa)" file Data_out.dat

#----------------- Simulation 1: Minimization + Relaxation ---------
# Relaxation parameters
# Min_style : sd = steepest descent, cg = conjugate gradients
min_style         cg
min_modify line   quadratic
#Minimization : etol    ftol   maxiter   maxeval
minimize          0   1e-7    10000     100000

fix               1 all box/relax iso 0.0 
min_style         cg
min_modify line   quadratic
minimize          0   1e-4    10000     100000
unfix             1

variable          vol_peratom equal vol/atoms
variable          E_peratom equal pe/atoms
variable          latt_param equal lx/5          # WARNING       
variable          forcenorm equal fnorm

print             "${vol_peratom}  ${E_peratom}  ${latt_param} ${forcenorm} ${Pressure}" append Data_out.dat

   #MODIFY
#----------------- Simulation 2 : Rescale to max size -------------------
# Here we start from an arbitrary box, relax it to the
# equilibrium config and then expand it before compression. Like that we are
# always caclculating around the equilibrium position (the parabola is always centered).

variable          def equal 1.5e-3     # delt_eps/(2*k) * nb_unit_cell
variable          kmid equal 25        # kmid is the middle value of k
variable          definit equal ${kmid}*${def}

fix               deformation1 all deform 1 x delta -${definit} ${definit} y delta -${definit} ${definit} z delta -${definit} ${definit} remap x units box 
run               1
unfix             deformation1

#----------------- Simulation 3 : loop -> Compress + calculate nrj ----------------------------
quit
variable          k loop 500
label             startloop
#variable          k loop 50 

print "NEXT LOOP INDEX: k = ${k}"

fix               deformation2 all deform 1 x delta ${def} -${def} y delta ${def} -${def} z delta ${def} -${def} remap x units box
run               1
unfix             deformation2

min_style         cg
min_modify line   quadratic
#Minimization : etol    ftol   maxiter   maxeval
minimize          0   1.0e-6    10000     100000

print             "${vol_peratom}  ${E_peratom}  ${latt_param} ${forcenorm} ${Pressure}" append Data_out.dat

next              k
jump              Ni_bulkmodulus.param  startloop 

